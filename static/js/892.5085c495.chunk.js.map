{"version":3,"file":"static/js/892.5085c495.chunk.js","mappings":"oMACA,GAAgB,OAAS,2BAA2B,YAAc,gCAAgC,QAAU,4BAA4B,KAAO,yBAAyB,eAAe,iCAAiC,IAAM,wBAAwB,eAAe,kC,qEC4FrQ,EA/Ee,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAEjB,GAA0CC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAApEC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAO,EAAPA,SAE9BC,EAAAA,EAAAA,YAAU,YACLD,GAAWH,IACdP,EAAS,KAEVE,GAASU,EAAAA,EAAAA,MACV,GAAG,CAACL,EAAMG,IAEV,OAAmCG,EAAAA,EAAAA,MAA3BC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aASlB,OACC,iCACC,SAACC,EAAA,EAAG,CACHC,MAAM,UACNC,YAAY,mCAEZV,GACA,SAACW,EAAA,EAAO,KAER,oBAASC,UAAWC,EAAAA,OAAc,UACjC,gBAAKD,UAAU,YAAW,UACzB,iBAAKA,UAAWC,EAAAA,YAAmB,WAClC,iBAAKD,UAAWC,EAAAA,QAAe,WAC9B,wBAAI,WACJ,uBAAG,yCAGJ,gBAAKD,UAAWC,EAAAA,KAAY,UAC3B,kBAAMC,SAAUP,GA1BqB,SAAH,GAA6B,IAC/DQ,EAAW,CAChBC,MAFkD,EAALA,MAG7CC,SAH4D,EAARA,UAKrDvB,GAASwB,EAAAA,EAAAA,IAAOH,GACjB,IAoB8C,WACtC,gBAAKH,UAAWC,EAAAA,cAAqB,UACpC,oCACKP,EAAS,UAAQ,IACrBM,UAAWC,EAAAA,gBACXM,GAAG,QACHC,KAAK,QACLC,YAAY,yBAGd,gBAAKT,UAAWC,EAAAA,cAAqB,UACpC,oCACKP,EAAS,aAAW,IACxBgB,KAAK,WACLV,UAAWC,EAAAA,gBACXM,GAAG,WACHC,KAAK,WACLC,YAAY,sBAGbpB,IAAS,cAAGW,UAAWC,EAAAA,gBAAuB,SAAC,mDAChD,gBAAKD,UAAWC,EAAAA,cAAqB,UACpC,mBACCS,KAAK,SACLV,UAAWC,EAAAA,IAAW,SACtB,2BAYX,C,qEC3FaU,EAAW,SACtBC,GAEY,IADZC,EAAoB,uDAAG,KAEnBC,EAASF,EACVG,QAAQ,WAAY,IACpBA,QAAQ,WAAY,KACpBA,QACC,iGACA,IAGJ,OADIF,IAAOC,EAASA,EAAOE,MAAM,EAAGH,GAAS,OACtCC,CACT,ECbaG,EAAW,gBACXC,EAAa,SAACrB,GAAa,gBAAQA,EAAK,cAAMoB,EAAQ,E,kBC2BnE,IACA,EAAe,IAA0B,4D,SCazC,EAnCY,SAAH,GAA6C,IAAvCpB,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaqB,EAAK,EAALA,MAE1BC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,EAAU,gCAA4BF,GAE5C,OACC,+BACC,UAAC,KAAM,YACN,kBAAOG,SAAS,WAAU,SAAEL,EAAWrB,KACtCC,GACA,iCACC,iBACCyB,SAAS,cACTf,KAAK,cACLgB,QAASb,EAASb,EAAa,QAEhC,iBAAM2B,IAAI,YAAYC,KAAMJ,KAC5B,iBAAMK,SAAS,YAAYH,QAAQ,QACnC,iBAAMG,SAAS,WAAWH,QAASN,EAAWrB,MAC9C,iBAAM8B,SAAS,SAASH,QAASF,KACjC,iBAAMK,SAAS,WAAWH,QAASL,GAASS,KAC5C,iBAAMD,SAAS,eAAeH,QAASP,KACvC,iBACCU,SAAS,iBACTH,QAASb,EAASb,EAAa,WAIjC,iBAAMU,KAAK,SAASgB,QAAQ,0BAKjC,C","sources":["webpack://our-awesome-project/./src/pages/SigninPage/SigninPage.module.scss?0f03","pages/SigninPage/SigninPage.tsx","utils/string/clearText.ts","config/seo-config.ts","assets/images/favicon.svg","utils/Seo/Seo.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"signUp\":\"SigninPage_signUp__Rucel\",\"signWrapper\":\"SigninPage_signWrapper__XLa0S\",\"heading\":\"SigninPage_heading__REr4Z\",\"form\":\"SigninPage_form__pUgGg\",\"form-control\":\"SigninPage_form-control__xYr4a\",\"btn\":\"SigninPage_btn__aWs7X\",\"server-error\":\"SigninPage_server-error__ltxLS\"};","import { useNavigate } from 'react-router-dom';\nimport styles from './SigninPage.module.scss';\nimport { useEffect } from 'react';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { reset, signin } from '../../store/auth/authSlice';\nimport Seo from '../../utils/Seo/Seo';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\n\ninterface IFormInput {\n\temail: string;\n\tpassword: string;\n}\n\nconst Signin = () => {\n\tconst navigate = useNavigate();\n\tconst dispatch = useAppDispatch();\n\n\tconst { user, loading, error, success } = useAppSelector(state => state.auth);\n\n\tuseEffect(() => {\n\t\tif (success || user) {\n\t\t\tnavigate('/');\n\t\t}\n\t\tdispatch(reset());\n\t}, [user, success]);\n\n\tconst { register, handleSubmit } = useForm<IFormInput>();\n\tconst onSubmit: SubmitHandler<IFormInput> = ({ email, password }) => {\n\t\tconst userData = {\n\t\t\temail,\n\t\t\tpassword,\n\t\t};\n\t\tdispatch(signin(userData));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Seo\n\t\t\t\ttitle=\"Sign in\"\n\t\t\t\tdescription=\"Enter the colors palette site!\"\n\t\t\t/>\n\t\t\t{loading ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\t<section className={styles.signIn}>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className={styles.signWrapper}>\n\t\t\t\t\t\t\t<div className={styles.heading}>\n\t\t\t\t\t\t\t\t<h1>Login</h1>\n\t\t\t\t\t\t\t\t<p>Login and start searching colors</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={styles.form}>\n\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t\t\t\t<div className={styles['form-group']}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t{...register(\"email\")}\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles['form-control']}\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={styles['form-group']}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t{...register(\"password\")}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles['form-control']}\n\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{error && <p className={styles['server-error']}>You have entered an invalid email or password</p>}\n\t\t\t\t\t\t\t\t\t<div className={styles['form-group']}>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.btn}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Signin;\n","export const onlyText = (\n  _string: string,\n  limit: null | number = null\n): string => {\n  let result = _string\n    .replace(/<[^>]+>/g, '')\n    .replace(/&[^;]+./g, ' ')\n    .replace(\n      /([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g,\n      ''\n    );\n  if (limit) result = result.slice(0, limit) + '...';\n  return result;\n};\n","export const siteName = 'Color Palette';\nexport const titleMerge = (title: string) => `${title} | ${siteName}`;\n","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFavicon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"16.000000pt\",\n    height: \"16.000000pt\",\n    viewBox: \"0 0 16.000000 16.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,16.000000) scale(0.100000,-0.100000)\",\n    fill: \"#000000\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43 148 c-55 -27 -50 -114 8 -138 89 -37 151 99 63 139 -30 13 -42 13 -71 -1z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFavicon);\nexport default __webpack_public_path__ + \"static/media/favicon.751ec7894960d610641b7ef3cc8eac0c.svg\";\nexport { ForwardRef as ReactComponent };","import { Helmet } from 'react-helmet-async';\nimport { onlyText } from '../string/clearText';\nimport { siteName, titleMerge } from '../../config/seo-config';\nimport { ISeo } from './Seo.interface';\nimport { useLocation } from 'react-router-dom';\nimport logoImage from '../../assets/images/favicon.svg';\n\nconst Seo = ({ title, description, image }: ISeo) => {\n\n\tconst { pathname } = useLocation();\n\tconst currentUrl = `https:/localhost:3000/${pathname}`;\n\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title itemProp=\"headline\">{titleMerge(title)}</title>\n\t\t\t\t{description ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<meta\n\t\t\t\t\t\t\titemProp=\"description\"\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tcontent={onlyText(description, 152)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<link rel=\"canonical\" href={currentUrl} />\n\t\t\t\t\t\t<meta property=\"og:locale\" content=\"en\" />\n\t\t\t\t\t\t<meta property=\"og:title\" content={titleMerge(title)} />\n\t\t\t\t\t\t<meta property=\"og:url\" content={currentUrl} />\n\t\t\t\t\t\t<meta property=\"og:image\" content={image || logoImage} />\n\t\t\t\t\t\t<meta property=\"og:site_name\" content={siteName} />\n\t\t\t\t\t\t<meta\n\t\t\t\t\t\t\tproperty=\"og:description\"\n\t\t\t\t\t\t\tcontent={onlyText(description, 197)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<meta name=\"robots\" content=\"noindex, nofollow\" />\n\t\t\t\t)}\n\t\t\t</Helmet>\n\t\t</>\n\t);\n};\n\nexport default Seo;\n"],"names":["navigate","useNavigate","dispatch","useAppDispatch","useAppSelector","state","auth","user","loading","error","success","useEffect","reset","useForm","register","handleSubmit","Seo","title","description","Spinner","className","styles","onSubmit","userData","email","password","signin","id","name","placeholder","type","onlyText","_string","limit","result","replace","slice","siteName","titleMerge","image","pathname","useLocation","currentUrl","itemProp","content","rel","href","property","logoImage"],"sourceRoot":""}